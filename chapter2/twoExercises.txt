1) What are the various operation that can be performed on lists(and their elements)?
Ans :
     - You can add two list lists together using '+' or add an item using the append() method.This mutates
     - One can use len() method to get the length/size of a list passed as an argument
     - One can use the remove() method to remove a list item by passing the value to be removed as an argument.It mutates.
     - One can use the count() method to return the number of times a value passed as an argument can be found
     - The list sort() method sorts numbers in ascending order and strings in alphabetical format
     - The list slice() method returns a new list with sliced items
     - list sorted() does same aaction as sort() but returns a new list instead of mutating original
     - The insert() method adds an element to a specific index in the list
     - The list pop() method removes and returns a list item.It takes an optional input which is the index of item to be removed

2) How does list slicing work in python?What are the different  things you can do with slicing?
   (EXTRA CREDIT: can you figure out how to get all the elements of a list in reverse order just by using slicing notation)
Ans  :
      - The slice() method used on list doesn't mutate the original list, it returns a new copy
      -  Using slice returns a slice or sub-list of list elements.
         It's created using a subscript notation [] with colons
         eg variable_name[1:2:3] where 1 = start(included in our slice), 2 = stop(excluded in our slice) and 3 = step(optional args for difference between each index in sequence)
      -  my_list[::-1] returns a new list with items reversed

3)  How do you check "list membership" in python?In other words, if I have a list of fruits, what
     is the simplest way to check whether there is an 'apple' in the list?
Ans   :
       -  By using the "in" and "not in" keyword
          fruits=["apple","mango","orange"]
          print("apple" in fruits) //True
4)  EXTRA CREDIT: What are the limitations on what kinds of values can be placed in a set?For example, can you include
    a whole list as one of the elements of a set?Why or why not?What happens in python when
    you try to do that?
     -   Sets can only contain unique values that are hashable
         so print(set('hello')) // {'l','e','o','h'}
     -   Since lists aren't hashable, python doesn't accept them as an element within a set and will throw a TypeError
5)  How cn you turn a list into a tuple or a set?Can you freely convert between any two of these?
     -   We can freely convert bewteen lists,sets and tuples by passing their data types as arguments
         to required formats eg set(list or tuple type),list(set or tuple type),tuple(set or list type)

6)   Thinking about Boolean logic, what cn you learn about the concept of
     "Truth value" in python?What are some examples of things that are "truthy" in python?What are some
     examples of things that are "falsy"
     -   Truth values evaluate to 'True' in a boolean context
     -   Non-empty sequences or collection (lists,tuples,strings,dictionaries,sets),numeric values that
         that are not zero and True are truthy values in python
     -   Falsy value include empty sequences (lists,tuples,strings,dictionaries,sets),zero in
         every numeric type,none and False
7)    If you have a variable "x" which has been assigned some value,how can you ask python what
      the data type of "x" is?
      - type(x)



